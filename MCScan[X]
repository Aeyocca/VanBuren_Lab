11-07-17
Play around with MCScan and MCScanX, just kind of get familiar with them, I think I will follow and online tutorial just to iron everything out first. 
Would like to run a bunch of grass genomes through it to compare / contrast tandem gene duplicates across the grasses, but first:
https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)

Ayoooo fake it til you become it

Installing dependencies for MCScan... I think I will do all this on local first, probably easier than trying to load things onto hpcc for now
"LASTAL. Compile and then move lastal and lastdb on your PATH."
went to link and downloaded last-894 folder, extracted all. Re ran cygwin setup.exe, added under Devel category gcc g++ and gcc core, made sure they were the same version (6.4 something I think), also added make. Needed to add zlib also, just searched for it, found it under lib category I believe. Then was able to run make from last-894 directory, took like a minute, believe it ran.
Next step: move lastal and lastdb on PATH

aeyocca@Larry /cygdrive/c/Users/aeyocca/Downloads/last-894/last-894
$ PATH=/cygdrive/c/Users/aeyocca/Downloads/last-894/last-894/src/lastal
lastal.cc    lastal.exe   lastal.o     lastal.o8    lastal8.exe

aeyocca@Larry /cygdrive/c/Users/aeyocca/Downloads/last-894/last-894
$ PATH=/cygdrive/c/Users/aeyocca/Downloads/last-894/last-894/src/lastal.exe

aeyocca@Larry /cygdrive/c/Users/aeyocca/Downloads/last-894/last-894
$ PATH=/cygdrive/c/Users/aeyocca/Downloads/last-894/last-894/src/lastdb
lastdb.cc    lastdb.exe   lastdb.o     lastdb.o8    lastdb8.exe

aeyocca@Larry /cygdrive/c/Users/aeyocca/Downloads/last-894/last-894
$ PATH=/cygdrive/c/Users/aeyocca/Downloads/last-894/last-894/src/lastdb.exe

Pretty sure I wanted the .exe files, Seems like .cc is the uncomplied file that was compiled using make and .exe I am assuming means its executable

Next: "Optional SCIP. You'll need the executable scip on your PATH. You can also download a copy from here."
Downloaded his file from his github but I dont think it will work, If this all works I think its a good idea to move things out of my downloads folder, might want to start deleting things in there

Lets roll like that scip thing worked.

Follow this tutorial to get python up and running: https://www.davidbaumgold.com/tutorials/set-up-python-windows/
Looks like it works, back to MCScan tutorial
Need to get jcvi package somehow
Got it in /cygdrive/c/Python36/packages/jcvi directory, tried to run and said there was a syntax error. Ill take that as the version of python I'm running doesn't recognize the syntax. The github page was last editied on sept 3 2013, so downloading python 2.7.6 which came out in November 2013, hopefully that works
Installed in /cygdrive/c/Python27 directory... need to remove Python36 paths and replace with Python27

$ PATH=$PATH:/cygdrive/c/Python27
$ PATH=$PATH:/cygdrive/c/Python27/Tools/Scripts
$ python --version
  Python 2.7.6
$ cd /cygdrive/c/Python27
$ mkdir packages
$ cd packages
$ cp -r /cygdrive/c/Python36/packages/jcvi .
$ cd jcvic
$ python -m jcvi.apps.fetch phytozome

Need to find the Bio module, turns out this python version doesn't have pip, hahaha, tried manually installing pip, didn't work
Turns out jcvi was updated about a month ago so go to python version that comes with pip (>=2.7.9)

Lets take 2.7.13
Something not working, try installing python 2.7.14 through cygwin
Add pip 
$ python2 -m ensurepip
$ pip install Biopython
$ python -m jcvi.apps.fetch phytozome

It worked!!!!

Move to /cygdrive/c/Users/aeyocca/Documents/1_MSU/VanBuren.../MSCan directory, copy over jcvi package so it runs
$ python -m jcvi.apps.fetch phytozome Vvinifera,Ppersica

Side notes if I want to move this to hpcc, seems I will need to run >=2.7.9 python version, maybe not any 3 versions though. put jcvi package in same directory where I will run commands from, install Biopython module with pip

11-08-17
Downloading the files in this package used curl in active mode, no idea what that means, that may be the best way to go about things, however it was not working for me, so need to download the files in passive mode by specifying --disable-epsv in the curl command, going to try to fix this in the fetch.py script, pretty hard to find, I think I will just forget about it, will probably save time just manuallly downloading them

Run the python thing, that will spit out the ftp address you need,
$ curl <ftp address> --output <output_name> --disable-epsv
Vvinifera gff3: ftp://ftp.jgi-psf.org/pub/compgen/phytozome/v9.0/Vvinifera/annotation/Vvinifera_145_gene.gff3.gz --output Vvinifera_145_gene.gff3.gz
Vvinifera cds: ftp://ftp.jgi-psf.org/pub/compgen/phytozome/v9.0/Vvinifera/annotation/Vvinifera_145_cds.fa.gz --output Vvinifera_145_cds.fa.gz
Ppersica gff3: ftp://ftp.jgi-psf.org/pub/compgen/phytozome/v9.0/Ppersica/annotation/Ppersica_139_gene.gff3.gz  --output Ppersica_139_gene.gff3.gz
Ppersica cds: ftp://ftp.jgi-psf.org/pub/compgen/phytozome/v9.0/Ppersica/annotation/Ppersica_139_cds.fa.gz --output Ppersica_139_cds.fa.gz

Convert gff to bed: ex python -m jcvi.formats.gff bed --type=mRNA --key=Name Vvinifera_145_gene.gff3.gz -o grape.bed

Next step is pairwise synteny search: need 
$ pip install networkx
$ python -m jcvi.compara.catalog ortholog grape peach

Need to add lastal and lastbd to path
copied lastal.exe and lastdb.exe to /bin directory, added /bin directory to path, then it worked. 
$ pip install scipy
that didn't work, seems I need numpy+mkl wheel file found here: https://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy
but for reasons unknown to me, had to change the file name to numpy-1.13.3+mkl-cp27-none-any.whl for it to work, lets try scipy now that didn't work, lets try file renaming nonsense for scipy, it all downloaded, lets see if it works.
Nope, seems like numpy build didn't work
I think I'm going to cut my losses and make virtual environment on hpcc since clearly something is up with cygwin nonsense
hpcc virtual environment stuff: https://wiki.hpcc.msu.edu/display/hpccdocs/Using+Python+virtualenv+on+the+HPCC
python virtual environment stuff: https://pypi.python.org/pypi/virtualenv

Latest version of python as I'm writing this is 3.6 something I believe, latest for hpcc is 3.5.3 so I think I will roll with that and see if it works, if not, they have some 2.7 versions, the Biopython can only be run on 2.7.2, lets roll with that

Got all these before launching into virtual env. Python is default version, NumPy and SciPy loaded without specifying version:
Currently Loaded Modules:
  1) GNU/4.4.5        5) MATLAB/R2014a    9)  Python/2.7.2      13) MKL/10.3
  2) OpenMPI/1.4.3    6) R/2.15.1         10) Biopython/1.65
  3) TBB/4.1.0        7) Boost/1.47.0     11) SciPy/0.9.0
  4) CMake/2.8.5      8) Stata/15.0.SE    12) NumPy/1.6.1
  
It automatically shifted me to MKL/10.3 from 11 something
Load Biopython too

Took the ?passive=yes thing off of the url in the fetch.py script and ayooo, don't need to manually download files
$ pip install networkx
successful
$ python -m jcvi.compara.catalog ortholog grape peach
lastal and lastdb thing not working


$ virtualenv MCScan
$ source MCScan/bin/activate #launches into virtual environment with those modules loaded previously
Next time can just do source after loading modules instead of virtualenv

Next steps: make mcscan directory (lowercase so don't have to make upper all the time) in 01_VanBuren directory, throw jcvi folder in there, also put lastal/lastdb .exe files (i think that will work) in ~/MCScan/bin/ directory

not recognizing lastal/lastdb, maybe because I built it on cygwin or something, anyway, delete all the lastal files, load unzipped file to hpcc, and use make command.
to compile on hpcc, 
$  make CXXFLAGS=-O3 #add that flag since earlier got the error message cc1plus: error: unrecognized command line option "-std=c++11"

lordy lordy lordy finally looks like that did it..... hmm lastal: I was installed here with multi-threading disabled.
Alright, what I know: compiled lastal with multithreading disabled which is a problem, so I'm going to delete everything and reload the uncompiled version first
Need to compile with a newer compiler, thats the next step, could maybe do that tonight cuz I'm going hommmmeeee.e....

11-09-17
My mission now is to figure out how to compile the lastal and lastdb files so I can execute them. Not able to compile now because of following error message:  unrecognized command line option "-std=c++11"
Looked online, seems it is because g++ is out of date, they say the option -std=c++11 is only available in g++>=4.3 but:
$ g++ --version
g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-17)
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

They say a wrap around is to specify -std=c++0x which I think is a possible edit to the make file, but make file is binary so can't edit :/
Thought about upgrading g++, but some message came up on hpcc saying carefull. Maybe could try to compile locally, check python bit version on hpcc:
>>> import struct
>>> print struct.calcsize("P") * 8
64

So is local, WHY YOU NO COMPILE CORRECTLY ON LOCAL, SHOULD WORK, maybe get same python version.. shouldn't matter really
Search the error message a little more, not able to edit make file, see if i can run g++ on command line instead
That didn't work, spit out a bunch of file specific error messages like things were defined incorrectly or something, I have the lastal and lastdb files still that were compiled without multithreading, I got the help message by typing lastal on the command line... but says it isn't found when running python script, try throwing lastal / lastdb in some mcscan directories, nope..
Nevermind, wasn't in virtual environment, now in there and able to reproduce the compilesd with multi-threading disabled. Going to try compiling locally and copying and see what happens:
compiling locally didn't work, saw could override -std=c++11 flag by 
$ make CXXFLAGS='-std=c++0x'
spit out some error messages on some scripts, but compiled lastal and lastdb (made the .exe files), see if they work
lastal not found
Son of a gun, lastal and lastdb are 32 bit, but it worked locally, how did it end up 32 bit, nevermind, PE32+ means 64 bit, yea duh
Everywhere online says it should be that the files and the system are not the same bit but it looks like they are, no idea why they cannot read it
Try deleting all files except last ones

Can't figure it out really, just move onto MCScanX, IVE WASTED SO MUCH TIMEEEEEEE. I almost refuse to give up


MCScanX

Download MCScanX from online UGA website, unzip, compile on hpcc using make, follow tutorial for at and vvinifera:
$ ./MCScanX data/at_vv #yes there is a /s (space) there so use MCScanX executable on the preinstalled data/ directory
I think this comes with the tutorial files preloaded, need blast and gff, blast will contain both at and vv, their gff has both together in 1 file
output is a bunch of html files for each organism's chromosome. Also /data/at_vv.collinearity and data/at_vv.tandem
reading the readme to see what I can do next, I guess I want to define tandem duplicates, want to look at tandem duplicates across the grasses, also need to define homologs then to see if grasses share same tandem duplicates. Lets just do at vs vvinifera for now because come preinstalled with blast and gff files
Ah, there is example dot.ctl in downstream_analysis/ directory that explains it, MAKE SURE YOU HAVE TABS AFTER NUMBERS & CHR POSITIONS BEFORE //

[yoccaala@dev-intel14-k20 MCScanX]$ ./duplicate_gene_classifier data/at
Reading BLAST file and pre-processing
Generating BLAST list
54980 matches imported (40847 discarded)
15 pairwise comparisons
211 alignments generated
Type of dup     Code    Number
Singleton       0       5298
Dispersed       1       10460
Proximal        2       1045
Tandem  3       3002
WGD or segmental        4       7364

awesome, have .gene_type file that has geneID \t code
plot duplicate genes across genome? table with # / size of tandem duplicates, histogram of which ones shared? How to display differential retention / loss??

11-14-17
plan moving forward:
- practice tandem duplicate caller on >2 genomes
- Download necessary files for 5 grass species
- tandem duplicate caller on the 5 species
- compare them:
  - Number in each species
  - Which they have in common
  
.bed files have Chrom Start Stop  Name  Score Strand, more possible: https://genome.ucsc.edu/FAQ/FAQformat.html
.gff has Chrom  Start Stop  Start End, nice

Plot tandem duplicates across genome
Download at.gff and at.tandem, all notes now moving to R markdown

11-16-17
Part of the readme for MCScanX:
5) circle_plotter.java
This Java scripts generates a circular plot which links all the collinear blocks with curved li
nes between and within the chromosomes given by users.

Usage:"java circle_plotter -g gff_file -s collinearity_file -c control_file -o output_PNG_file"

6) bar_plotter.java
This Java scripts generates a bar plot displaying chromosome rearrangement between reference an
d target chromosome sets given by users.

Usage:"java bar_plotter -g gff_file -s collinearity_file -c control_file -o output_PNG_file"

7) add_ka_and_ks_to_collinearity.pl
This program calculates the Ka & Ks value of each collinear gene pair shown in the MCScanX outp
ut ".collinearity". BLAST and Bio-perl are needed for executing this program.

Usage:"perl add_ka_and_ks_to_collinearity.pl -i collinearity_file -d cds_file -o output_file"

8) group_collinear_genes.pl
This program groups genes through connecting collinear genes until any gene in each group has no collinear gene outside the group. This analysis can be used to construct gene families based on collinear relationships.

Usage:"perl group_collinear_genes.pl -i collinearity_file -o output_file"

9) detect_collinearity_within_gene_families.pl
This program detects collinear gene pairs within gene families.

Usage:"perl detect_collinearity_within_gene_families.pl -i gene_family_file -d collinearity_file  -o output_file"

10) origin_enrichment_analysis.pl
This program identifies potential enrichment of duplicate gene origins for input gene families according to the result of duplicate_gene_classifier.

Usage:"perl origin_enrichment_analysis.pl -i gene_family_file -d gene_type_file  -o output_file"

11) family_circle_plotter.java
This java script generates a circular plot which links all collinear genes within a gene family with red curved lines, and places the gene family collinearity into a genomic collinearity background.

Usage:"java family_circle_plotter -g gff_file -s collinearity_file -c control_file -f gene_family_file -o output_PNG_file"

12) family_tree_plotter.java/family_tree_plotter_show_length.java
This java script displays a gene family tree on which collinear gene pairs and tandem gene groups are connected with red and blue curves respectively. The former script does not show branch length while the latter script does.

Usage:"java family_tree_plotter -t tree_file -s collinearity_file -o output_PNG_file" (show collinear gene pairs only) or
"java family_tree_plotter -t tree_file -s collinearity_file -d tandem_pair_file -o output_PNG_file" (show both tandem and collinear gene pairs)

13) family_tree_plotter_chr.java
This java script displays a gene family tree on which collinear gene pairs and tandem gene groups are connected with red and blue curves respectively, and each gene of the tree is linked to its position on chromosomes whose synteny is shown.

Usage:"java family_tree_plotter_chr -t tree_file -g gff_file -s collinearity_file -o output_PNG_file" (show collinear gene pairs only) or
"java family_tree_plotter_chr -t tree_file -g gff_file -s collinearity_file -d tandem_pair_file -o output_PNG_file" (show both tandem and collinear gene pairs)



Working on circle plot thing, getting error message, module load JDK/jdk1.8.0 didn't work. module load Java/jdk1.8.0
try the earlier one, maybe its just a circle plot problem
Usage:"java dot_plotter -g gff_file -s collinearity_file -c control_file -o output_PNG_file"
That one worked.... maybe its the control file? Yup, there are different control files for different graphs, taking a little bit to run, maybe shouldn't have put in every chromosome for both at and grape, only took about 30 seconds, lets see how it looks

Ran bar plotter with the dot plot ctl file, its a picture of all reference chromosomes with patches of query chromosomes splattered all over them

What to do next?:
- Lets get 5 grass .gff files and .blast, blast is direct BLASTP output of m8 format, I think just the genomes you want against each other
- Check out numbers of tandem duplicates across them
- Not sure what the other questions are, or how to get a good idea of them
- Compare to published numbers
- See what pathways they are involved in:
  - GO terms for each genes or such in phytozome, getting link to plug into enrichment program
  - Do enrichment for each species
  - Hopefully, hypothesis is tandem involved in domestication traits in crops
  - Try to find share homologous comparisons, cross reference ID tandem with homologous gene pair list, ideally do some more filtering, but for now this is good
  - Interested how many conserved between species.
  - all sorts of comparisons 
  - could integrate gene expression data, look for sub / psuedofunctional evidence, start in one species between tandem duplicates, could do enrichment on just the highly expressed tandem duplicates, could look at different tissues for signs of subfunctionalization. 

Pick grass species: Originally picked a few off phytozome, but found gff files more easily on PlantGDB

Oryza sativa
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/OsGDB/Osativa_193_gene.gff3.bz2
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/OsGDB/Osativa_193_cds.fa.bz2
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/OsGDB/Osativa_193_peptide.fa.bz2
Zea mays 
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/ZmGDB/ZmB73_5a.59_WGS.gff.bz2
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/ZmGDB/ZmB73_5a_WGS_cds.fasta
  [yoccaala@dev-intel14 data]$ wget ftp://ftp.gramene.org/pub/gramene/maizesequence.org/release-3a.50/working_set_translations.fasta
Brachypodium distachyon 
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/BdGDB/Bdistachyon_192_gene.gff3.bz2
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/BdGDB/Bdistachyon_192_cds.fa.bz2
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/BdGDB/Bdistachyon_192_peptide.fa.bz2
Sorghum bicolor
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/SbGDB/Sbicolor_79_gene.gff3.gz
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/SbGDB/Sbicolor_79_cds.fa.gz
  [yoccaala@dev-intel14 data]$ wget http://www.plantgdb.org/download/Download/xGDB/SbGDB/Sbicolor_79_peptide.fa.gz
Just do those 4 for now
Not sure where to get maize peptide file from so just the three for now I guess

combine all cds files, convert into database, then search against itself, right?
alrighty, need to download peptide files which is like fasta but has protein sequences instead, since trying to do BLASTP search, needs to be AA sequence vs AA sequence, keep fasta files of nucleotides just incase. 
Maize protein file is "working gene set" whatever that means, seemed small but I guess genic part for maize can be small even if genome is huge since TE and such

11-17-17
Lets do db on smallest file and do test run:
$ module load BLAST
$ formatdb -i ZmB73_peptide.fa -o T -p T
#in formatdb.log file, alright are there really 148k protein coding sequences? No way, are there even that many spliceforms??? Wheres that number coming from??
Formatted 147837 sequences in volume 0
$ formatdb -i Bdistachyon_192_peptide.fa -o T -p T
Formatted 31029 sequences in volume 0

$ head ZmB73_peptide.fa > head_maize.fa
$ blastall -i head_maize.fa -d Bdistachyon_192_peptide.fa -p blastp
#successsss, looks good, lets try combining two fa files then formatting as database and search head_maize against it to see if that works

[yoccaala@dev-intel14 data]$ cat Bdistachyon_192_peptide.fa Osativa_193_peptide.fa > bd_os_peptide.fa
[yoccaala@dev-intel14 data]$ formatdb -i bd_os_peptide.fa -o T -p T
[yoccaala@dev-intel14 data]$ blastall -i head_maize.fa -d bd_os_peptide.fa -p blastp

Combined:
Matrix: BLOSUM62
Gap Penalties: Existence: 11, Extension: 1
Number of Sequences: 97367
Number of Hits to DB: 31,647,524
Number of extensions: 1548933
Number of successful extensions: 3567
Number of sequences better than 10.0: 129
Number of HSP's gapped: 3559
Number of HSP's successfully gapped: 129
Length of database: 42,821,810
Neighboring words threshold: 11
Window for multiple hits: 40
X1: 16 ( 7.5 bits)
X2: 38 (14.6 bits)
X3: 64 (24.7 bits)
S1: 40 (21.7 bits)
S2: 58 (26.9 bits)

Just bdist
Matrix: BLOSUM62
Gap Penalties: Existence: 11, Extension: 1
Number of Sequences: 31029
Number of Hits to DB: 9,662,686
Number of extensions: 464602
Number of successful extensions: 1138
Number of sequences better than 10.0: 46
Number of HSP's gapped: 1135
Number of HSP's successfully gapped: 47
Length of database: 13,212,686
Neighboring words threshold: 11
Window for multiple hits: 40
X1: 16 ( 7.5 bits)
X2: 38 (14.6 bits)
X3: 64 (24.7 bits)
S1: 40 (21.7 bits)
S2: 53 (25.0 bits)

yea it checks out, combine them all the submit bash script

[yoccaala@dev-intel14 data]$ cat Osativa_193_peptide.fa Bdistachyon_192_peptide.fa ZmB73_peptide.fa Sbicolor_79_peptide.fa > grass_peptide.fa
[yoccaala@dev-intel14 data]$ formatdb -i grass_peptide.fa -o T -p T
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_grass.sh
49489922.mgr-04.i

11-19-17
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_grass.sh
49629105.mgr-04.i


11-27-17
Damn, its been a while
doesnt look like it worked, try combining heads of os and bd and see if can search against itself

[yoccaala@dev-intel14 data]$ head -n24 Osativa_192_peptide.fa > head_os_peptide.fa
[yoccaala@dev-intel14 data]$ head -n15 Bdistachyon_192_peptide.fa > head_bd_peptide.fa
[yoccaala@dev-intel14 data]$ cat head_os_peptide.fa head_bd_peptide.fa > head_bd_os_peptide.fa
[yoccaala@dev-intel14 data]$ formatdb -i head_bd_os_peptide.fa -o T -p T
-bash: formatdb: command not found
[yoccaala@dev-intel14 data]$ module load BLAST
[yoccaala@dev-intel14 data]$ formatdb -i head_bd_os_peptide.fa -o T -p T

actually I think it worked just fine, output file is 1.9Gb large, indexed names might be messed up, o well cross that bridge when we get there. Moving on

combine all gff files
[yoccaala@dev-intel14 data]$ cat Osativa_193_gene.gff3 Bdistachyon_192_gene.gff3 ZmB73_5a.59_WGS.gff Sbicolor_79_gene.gff3 > grass_all.gff

rename grass_blastall.out to grass_all.blast to match file naming for MCScanX
move up one directory
./MCScanX data/grass_all ...hmm didn't work
.blast file looks completely different, read up on that a bit on how to get what they have
indeed it was the blastall command, needed a few extra flags, resubmit that script and let it run
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_grass.sh
50018348.mgr-04.i

11-28-17
Blastall error: [blastall] ERROR: SeqPortNew: lcl|6..
quick google search showed it is probably an error when I went to make the database, try making the database with -p F and see whats up
The blastall output looks fine, remake db, resubmit blastall with different name, then run MCScanX on previous blastall output

[yoccaala@dev-intel16-k80 data]$ cat Osativa_193_peptide.fa Bdistachyon_192_peptide.fa Sbicolor_79_peptide.fa ZmB73_peptide.fa > grass_peptide_pf.fa
[yoccaala@dev-intel16-k80 data]$ module load BLAST
[yoccaala@dev-intel16-k80 data]$ formatdb -i grass_peptide_pf.fa -o F -p F

Got a large amount of this error: [formatdb] WARNING: Sequence number 274652 (lcl|12516_grass_peptide_pf.fa), 17 illegal characters were removed:
2 Es, 2 Fs, 1 I, 9 Ls, 3 Ps
o whale, mooo ve on 

[yoccaala@dev-intel16-k80 data]$ qsub qsub_blastall_grass_pf.sh
50031459.mgr-04.i

[yoccaala@dev-intel16-k80 MCScanX]$ ./MCScanX data/grass_all
didn't work so I guess we are waiting for the other database to build
[yoccaala@dev-intel16-k80 data]$ blastall -i grass_peptide_pf.fa -d grass_peptide_pf.fa -p blastp -e 1e-10 -b 5 -v 5 -m 8 -o grass_all_pf.blast
[blastall] FATAL ERROR: ChrUn.fgenesh.mRNA.8|PACid:21882472: Database grass_peptide_pf.fa was not found or does not exist

maybe its that I am searching a database against a database, lets try to rename database when I make it, then do sequence file vs. database

[yoccaala@dev-intel16-k80 data]$ formatdb -i grass_peptide_pf.fa -o T -p T -n grass_peptide_pf_db
[yoccaala@dev-intel16-k80 data]$ qsub qsub_blastall_grass_pf.sh
50039074.mgr-04.i


job killed, walltime exceeded, also got that same error message, really need to figure that one out, maybe worth doing blastall on a website, check if that is possible 

try this to ensure I tried it:
[yoccaala@dev-intel14 data]$ module load BLAST
[yoccaala@dev-intel14 data]$ formatdb -i grass_peptide_pf.fa -p T -o T

change walltime to 12 hrs since not checking til tomorrow and exceeded walltime last time
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_grass_pf.sh
50073815.mgr-04.i

11-30-17
going to make separate db for all species, search each against all

[yoccaala@dev-intel14-k20 data]$ module load BLAST
[yoccaala@dev-intel14-k20 data]$ formatdb -i Osativa_193_peptide.fa -o T -p T -n Osativa_193_db
[yoccaala@dev-intel14-k20 data]$ formatdb -i Bdistachyon_192_peptide.fa -o T -p T -n Bdistachyon_192_db
[yoccaala@dev-intel14-k20 data]$ formatdb -i Sbicolor_79_peptide.fa -o T -p T -n Sbicolor_79_db
[yoccaala@dev-intel14-k20 data]$ formatdb -i ZmB73_5a_WGS_cds.fasta -o T -p T -n ZmB73_db

Start on command line to see if it works, I think it will work, write separate submission script for 4 species:
[yoccaala@dev-intel14-k20 data]$ blastall -p blastp -d "Osativa_193_db Bdistachyon_192_db Sbicolor_79_db ZmB73_db" -i Osativa_193_peptide.fa -e 1e-10 -b 5 -v 5 -m 8 -o Osativa_193.blast

Since yesterday's script seemed to run a little slow for the 12 hours, kept 12 hour request but bumped up from 2 nodes, 4 ppn to 3 nodes, 8 ppn
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Osativa.sh
50091582.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Bdistachyon.sh
50091600.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_ZmB73.sh
50091664.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Sbicolor.sh
50091603.mgr-04.i

Ran on command line, was getting same SeqPortNew error, so delete all the above
lets try on command line, rice vs bdist

consider blastdb_aliastool, I think I will try this next. Maybe my problem is the makedb command is changing something in my fasta file that makes it unusable as a query, to check if thats the case, will have to redownload one of the fasta files and search against a db I already created. 

It seems the one vs. one db was running... try the blast alias thing, is it worth it? I think so especially if later I need to do this with >30 species... command not found
 
The space separated list of dbs should work according the blastall documentation.. I think the problem might be when query is searched against itself, it certainly seems that way. In that case, edit the qsub scripts to just not include themselves as a db and I think we will be good, one last check to see if its the Osativa db though.. need to start bringing a hoodie in, its cold here

[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Osativa.sh
50092663.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Bdistachyon.sh
50092664.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_Sbicolor.sh
50092665.mgr-04.i
[yoccaala@dev-intel14-k20 data]$ qsub qsub_blastall_ZmB73.sh
50092667.mgr-04.i

12-01-17
Put in the wrong maize input file, the protein translated sequence file is ZmB73_peptide.fa
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_ZmB73.sh
50109808.mgr-04.i

The other ones are on about 7 hours of runtime and counting... hmmm alsoonly has about 44,000 lines in the output file. Wonder why it is going so slow? ~123,000 lines in the at.blast file that came with MCScanX
Damn, only requested 12 hours of walltime, will probably exceed it
Maybe its my data, maybe not. Peptide file for rice has 66,338 peptides. Should I delete ones on unknown chromosomes?
31,029 for Bdistachyon, 29,448 for Sbicolor, 147,837 for maize.... definitely not right, check that file. go find another one for maize

maybe the files only update every once in a while, because I checked the length of the files and they hadn't changed in 10 minutes, so I did ls -lth and found the time stamps were all over an hour old, and I definitely did not open them at their time stamp, so I didn't interrupt by opening the files.

We are gonna grab one from gramene, here is the readme
 'pep.all' - the super-set of all translations resulting from Ensembl known
     or novel gene predictions.
There we go: ftp://ftp.ensemblgenomes.org/pub/plants/release-22/fasta/zea_mays/pep/Zea_mays.AGPv3.22.pep.all.fa.gz
This one only has ~63k peptides, much better. renamed to what I had the old peptide.fa so don't have to delete / resubmit job.. still worried about the other blast ones running out of walltime though. Edit submission scripts to output .blast1 files LOOK THIS IS WHERE I ACTUALLY EXPLAIN A SUFFIX. Resubmit to run.. screw it just request 140 hrs walltime, 8 nodes, 3 ppn

[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Osativa_incwalltime.sh
50110448.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Bdistachyon_incwalltime.sh
50110454.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Sbicolor_incwalltime.sh
50110456.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_ZmB73_incwalltime.sh
50110457.mgr-04.i
The above are at 3 hrs runtime at 4:30


I think something is up with the rice file, look for another one
Rice annotation project website, all.pep: http://rice.plantbiology.msu.edu/pub/data/Eukaryotic_Projects/o_sativa/annotation_dbs/pseudomolecules/version_7.0/all.dir/all.pep
renamed to Osativa_TIGR_peptide.fa
make db, rewrite all qsubs to include this db, THIS DB AND QSUB ASSOCIATED WITH IT WILL HAVE A _TIGR TAG, THE BLAST OUTPUT FILES WILL HAVE .blast2 LOOKIE I EXPLAINED ANOTHER ONE, TWO IN ONE DAY YIPPIE
submit those with same requests as .blast1 ones

[yoccaala@dev-intel14 data]$ module load BLAST
[yoccaala@dev-intel14 data]$ formatdb -i Osativa_TIGR_peptide.fa -o T -p T -n Osativa_db_TIGR
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Osativa_TIGR.sh
50118034.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Sbicolor_TIGR.sh
50118035.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_Bdistachyon_TIGR.sh
50118036.mgr-04.i
[yoccaala@dev-intel14 data]$ qsub qsub_blastall_ZmB73_TIGR.sh
50118037.mgr-04.i

hot diggity damn, I think I might have actually solved it... we shall see. hopefully they freaking finish. Have to bring up with Bob how slow they are, lets check final numbers for blast run with 12 hr walltime request.. damn I deleted them already, I think I still have file size listed in stdout, check, yea, 5,6, and 7 Mb for Bdist,Sbi,and Os respectively, at blast alone was 32 Mb, damn, expecting 5X that output so... 5/160 = 1/32. 32x12 = 384 hours at this rate WITH NODES=8:PPN=3!! this is 100% a task that can be multithreaded. looks like there is a numthreads flag, "common to all BLAST+ applications" but can't run it on command line, seems like it recognizes -n as a flag to be T or F:
[yoccaala@dev-intel14 data]$ blastall -p blastp -d "Bdistachyon_192_db Sbicolor_79_db ZmB73_db" -i Osativa_TIGR_peptide.fa -e 1e-10 -b 5 -v 5 -m 8 -o Osativa_TIGR.blast2 -num_threads 4
[blastall] ERROR: MegaBlast search [um_threads] must be one of {'T', 't', 'F', 'f'} or omitted




